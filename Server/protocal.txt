Chess Protocol v1.0
===============================

Whatneeds to be stores on the server?
 - state of the board
 - whose turn it is
 - if someone has one


Packets from server
-------------------
NAME - (response) - it must decide wether or not toa accept a username

	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ascii		packet type: "NAME"
	4	1	uint8		name response (see below)

 	name response
 	-----------------------
	1:accepted
	(denied:)
	4: username to short
	5: username too long
	6: username has invalid characcters
	7: username already taken
	8: username not allowed


INIT - (response) - When a new client connects the server sends an join packet in response


	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ascii		packet type: "INIT"
	4	1	uint8		role response (see below)
	5	1	uint8		length of the username p1
	6	1	uint8		length of the username p2
	7	1	uint8		includes inital board (0= false, 1 = true)
	8	?	string		username p1
	?	?	string		username p2

	?	64	uint8 x64	the board state (see update)


	role response
	---------------------------------------
	1: player 1
	2: player 2
	3: spectator



JOIN - () - When a new client connects teh server sends a join packet in response

	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ascii		packet type: "JOIN"
	4	1	uint8		join response (1 = join sucessful, 0 = join unsuccessfull)



MOVE (response) - sent after the player makes an invalid move

	O	L	Datatype	Desc
	-------------------------------------------
	0	4	ascii		packet type: "MOVE"
	4	1	uint8		Error Code (see Below)
	
	Move Error Code
	--------------------------
	0: Move is legal (this should never be sent in a packet, an update packet will be sent if a move is legal)
	1: Move is off of the board
	2: Player does not own peice
	3: Board space Is Empty
	4: Player is stepping on themselves (the target space is occupied by the a different peice owned by the current player) 
	5: It is not the current players turn
	6: Move is not valid for the type of peice
	7: Path is blocked by one of the player's peices
	8: Other 





HOVR (broadcast) - return the valid move set for the peice the player is hovering over

	O	L	Datatype	Desc
	-------------------------------------------
	0	4	ascii		packet type: "HOVR"
	4	1	uint8		x of the hovering p
	5	1	uint8		y of the hovering p

	ToDo:
	6   8   uint8 x8    Valid moveset for the peice in consideration. Will not be sent if sending it to spectators
						or the inactive player

CHEK (response) - 
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"CHEK"

CKMT (response) - 
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"CKMT"

UNDO (response) - 
O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"UNDO"

	
UPDT (in progress)- The state of the game

	O	L	Datatype	Desc
	-------------------------------------------
	0	4	ascii		packet type: "UPDT"
	4	1	uint8		whose turn (1/2)
	5	1	uint8		victory state (seebelow)
	6	64	uint8 x64	the board state (seebelow)

	who's won
	--------------------------------------------
	0: currently playing the game
	1: player 1 has won the game
	2: player 2 has won the game
	3: game canceled

	Board State
	--------------------------------------------
	0:	Empty

    		//Typically "white"
    1:	P1 Pawn
    2:	P1 Rook
    3:	P1 Knight
    4:	P1 Bishop
    5:	P1 Queen
    6:	P1 King

    		//Typically "black"
    7:	P2 Pawn
    8:	P2 Rook
    9:	P2 Knight
    10:	P2 Bishop
    11:	P2 Queen
    12:	P2 King



CHAT (placeHolder)- when reciving a chat packet from a client the server sends this chat packet out to all connected, exept for the orifinal sender

	O	L	Datatype	Desc
	---------------------------------------------------
	0	4	ASCII		packet type: "Chat"
	4	1	uint8		length of the username
	5	2	Uint16		length of the chat messege
	6	?	string		username
	?	?	string		message


			
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	




Packets from Client
-------------------

NAME (request) (placeHolder) - after establishing a connection w/the server, clinet will send a JOIN packet w/ a desired username. 	The server will send back a response.


	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ASCII		packet type "JOIN"
	4	1	uint8		howlong teh username is (255 max)
	5	?	ascii		the desired username	


HOVR - This packet is submitted when a player hovers their mouse over a chess peice
	
	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ASCII		packet type "HOVR"
	4	1	uint8		colom number of the peice the player is hovering over
	5	1	uint8		row number of the peice the player is hovering over


INIT - submitted from the Lobby or "Player Left" panel to set the players desired roll

	O	L	Datatype	Desc
	-------------------------------------------------------
	0	4	ASCII		packet type "INIT"
	4	1	uint8		Desired player Roll


PLAY (should be "MOVE") - This packet should be submitted when the player takes their turn
	
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"PLAY"	
	4	1	uint8		colom number of peice being moved
	5	1	uint8		row number of peice being moved
	6	1	uint8		colom number of the peices target location
	7	1	uint8		row number of the peices target location
		

PASS - the players turn is over
	
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"PASS"

CHEK -
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"CHEK"

CKMT - 
	O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"CKMT"

UNDO - 
O	L	DATATYPE	DESC
	-----------------------------------------------------
	0	4	ASCII		packet type:"UNDO"



CHAT - the player wants to chat.
	
	O	L	Datatype	Desc
	-----------------------------------------------------
	0	4	ASCII		packet type: "CHAT"
	4	1	uint8		length of messege(255 max)
	6	?	ASCII		messege for the chat	
	

